-- 기존 테이블 삭제 (순서 주의: FK 제약 때문에 역순으로 삭제)
DROP TABLE IF EXISTS STOCKINDETAIL;
DROP TABLE IF EXISTS STOCKIN;
DROP TABLE IF EXISTS STOCK;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS PET;
DROP TABLE IF EXISTS SUPPLIER;

-- 펫 종류
CREATE TABLE PET (
    PET_CODE VARCHAR(10) PRIMARY KEY COMMENT '펫 코드',
    TYPES_OF_PETS VARCHAR(10) NOT NULL COMMENT '펫 종류명'
) COMMENT = '펫 종류';

INSERT INTO PET (PET_CODE, TYPES_OF_PETS) VALUES
('P1', '강아지'),
('P2', '고양이');

-- 카테고리
CREATE TABLE CATEGORY (
    CATEGORY_CODE VARCHAR(10) PRIMARY KEY COMMENT '카테고리 코드',
    CATEGORY_NAME VARCHAR(10) NOT NULL COMMENT '카테고리명',
    PET_CODE VARCHAR(10) NOT NULL COMMENT '펫 코드',
    CONSTRAINT fk_pet_code FOREIGN KEY (PET_CODE) REFERENCES PET(PET_CODE)
) COMMENT = '상품 카테고리';

INSERT INTO CATEGORY (CATEGORY_CODE, CATEGORY_NAME, PET_CODE) VALUES
('C1', '강아지음식', 'P1'),
('C2', '고양이음식', 'P2'),
('C3', '강아지용품', 'P1'),
('C4', '고양이용품', 'P2');

-- 상품
CREATE TABLE PRODUCT (
    PRODUCT_CODE INT AUTO_INCREMENT PRIMARY KEY COMMENT '상품번호',
    CATEGORY_CODE VARCHAR(10) NOT NULL COMMENT '카테고리코드',
    PRODUCT_NAME VARCHAR(50) NOT NULL COMMENT '상품명',
    PRICE INT NOT NULL COMMENT '가격',
    EA INT COMMENT '보유수량',
    CONSTRAINT fk_product_category FOREIGN KEY (CATEGORY_CODE) REFERENCES CATEGORY(CATEGORY_CODE)
) COMMENT = '상품 상세';

INSERT INTO PRODUCT (CATEGORY_CODE, PRODUCT_NAME, PRICE, EA) VALUES
('C1', '맛있는사료', 150000, 10),
('C2', '고양츄르', 3000, 2),
('C1', '개개껌껌', 150000, 7),
('C2', '맛참캔치', 50000, 9),
('C1', '건강사료', 170000, 9),
('C2', '고양이캔', 120000, 15);

-- 공급업체
CREATE TABLE SUPPLIER (
    SUPPLIER_CODE VARCHAR(10) PRIMARY KEY COMMENT '공급업체 코드',
    SUPPLIER_NAME VARCHAR(50) NOT NULL COMMENT '공급업체명',
    PHONE_NUMBER VARCHAR(20) COMMENT '전화번호'
) COMMENT = '공급업체';

INSERT INTO SUPPLIER (SUPPLIER_CODE, SUPPLIER_NAME, PHONE_NUMBER) VALUES
('S1', 'k브랜드', '010-1234-5678'),
('S2', 'j브랜드', '010-9876-5432');

-- 입고내역 (정규화: StockIn)
CREATE TABLE STOCKIN (
    STOCKIN_CODE INT AUTO_INCREMENT PRIMARY KEY COMMENT '입고 코드',
    INBOUND_DATE DATE NOT NULL COMMENT '입고일자',
    SUPPLIER_CODE VARCHAR(10) NOT NULL COMMENT '공급업체 코드',
    CONSTRAINT fk_stockin_supplier FOREIGN KEY (SUPPLIER_CODE) 
        REFERENCES SUPPLIER(SUPPLIER_CODE)
) COMMENT = '입고내역';

-- 입고상세 (정규화: StockInDetail)
CREATE TABLE STOCKINDETAIL (
    STOCKINDETAIL_ID INT AUTO_INCREMENT PRIMARY KEY COMMENT '입고상세 ID',
    STOCKIN_CODE INT NOT NULL COMMENT '입고 코드',
    PRODUCT_CODE INT NOT NULL COMMENT '상품 코드',
    QUANTITY INT NOT NULL COMMENT '수량',
    UNIT_PRICE INT NOT NULL COMMENT '단가',
    CONSTRAINT fk_stockindetail_stockin FOREIGN KEY (STOCKIN_CODE) 
        REFERENCES STOCKIN(STOCKIN_CODE),
    CONSTRAINT fk_stockindetail_product FOREIGN KEY (PRODUCT_CODE) 
        REFERENCES PRODUCT(PRODUCT_CODE)
) COMMENT = '입고상세';

-- 예시 데이터 입력 (StockIn, StockInDetail)
INSERT INTO STOCKIN (INBOUND_DATE, SUPPLIER_CODE) VALUES
('2025-08-01', 'S1'),
('2025-08-03', 'S2'),
('2025-08-05', 'S1');

INSERT INTO STOCKINDETAIL (STOCKIN_CODE, PRODUCT_CODE, QUANTITY, UNIT_PRICE) VALUES
(1, 1, 50, 150000),  -- 8/1 입고, 상품1
(2, 2, 30, 3000),    -- 8/3 입고, 상품2
(3, 3, 40, 150000);  -- 8/5 입고, 상품3



 